- name: Digital Logic Design
  description: Theoretical and practical issues concerning design with combinational 
    and sequential logic circuits. Topics include number systems, 
    boolean algebra, representation and simplification of boolean functions, 
    universal logic families, finite-state machines, state tables and state diagrams, 
    flip-flops, counters, registers, adders, decoders, comparators, multiplexers, 
    memories, and applications.
  number: 1

- name: Programming for Electrical Engineers
  description: Programming in C in a Linux environment, with an emphasis on software 
    development methodology. Data types, expressions, control flow, pointers, subroutines, 
    numerical and text processing, data structures and algorithms. Introduction to 
    computer architecture and operating systems. Introduction to object oriented programming in C++, 
    and classification of programming languages.
  number: 2

- name: Computer Architecture
  description: Coursework involved programming PLD devices and PIC devices.
  number: 3

- name: Data Structures and Algorithms
  description: An introduction to fundamental data structures and algorithms, 
    with an emphasis on practical implementation issues and good programming methodology. 
    Topics include lists, stacks, queues, trees, hash tables and sorting algorithms. 
    Also an introduction to analysis of algorithms with big-O notation.
  number: 4

- name: Artificial Intelligence
  description: "This course covers many subtopics of AI, focusing on a few important subtopics in detail. 
    The 'intelligent agent' approach is explained and forms a foundation for the rest of the course. 
    Intelligent search: uninformed search, depth-first search, breadth-first search, iterative deepening; 
    informed search, best-first search, A*, heuristics, hill climbing; constraint satisfaction problems; 
    intelligent gameplaying, minimax search, alpha-beta pruning. Machine learning: probability, Bayesian 
    learning; decision trees; statistical machine learning, neural networks, Naive Bayes, k-nearest neighbors, 
    support vector machines. Natural language processing: syntax, semantics and pragmatics; real-world knowledge; 
    parsing; statistical NLP. Philosophy of AI: AI and consciousness, the Turing test, the Chinese room experiment."
  number: 5

- name: Communication Networks 
  description: Analysis and design of communication networks. Network protocols, architecture, security, 
    privacy, routing and congestion control, Internet, local area networks, wireless networks, multimedia 
    services. Physical layer, multiple access techniques, transport layer. Introduction to probabilistic and 
    stochastic analytic techniques for communication networks.
  number: 6

- name: Frequentist Machine Learning
  description: "Topics include: Statistical inference, exploratory data analysis and data visualization. 
    Linear regression methods such as ridge, LASSO, elastic net. Classification methods such as logistic 
    regression, SVM. Regularization and feature selection methods. Additive models. Classification and 
    regression trees including random forests and extreme gradient boosting. Model selection and cross 
    validation. Unsupervised learning methods such as market basket analysis and the a-priori method. 
    Non-negative matrix factorization and recommendation systems."
  number: 7

- name: Data Structures and Algorithms II
  description: A continuation of Data Structures and Algorithms, also with an emphasis on practical implementation 
    issues and good programming methodology. Topics include graphs, graph-related algorithms and dynamic programming 
    techniques. Also an introduction to some advanced topics such as Turing machines, computability and 
    NP-complete systems. Assignments include programming projects and problem sets.
  number: 8

- name: Computer Operating Systems
  description: "Theory and implementation of modern computer operating systems. Topics include: Message based 
    and multiprocessor kernels, networking, interprocess communication, security, auditing, authentication, 
    device drivers, interrupt handling, task switching, virtual memory, memory management, scheduling, 
    synchronization, locking, file systems, resource allocation and management, real-time fault-tolerant and 
    high security operating systems, user environment and interface issues."
  number: 9

- name: Deep Learning
  description: "Course topics include: Differentiable directed acyclic graphs covering applications in 
    unsupervised learning; generative and discriminative modeling; gradient-based methods for optimization 
    (stochastic gradient descent, Nesterov momentum, adam); fast gradient computation for arbitrary computational 
    graphs (automatic differentiation); exploding and vanishing gradient problems; convolutional networks; 
    arbitrary graphs for regression, classification and ranking; autoencoders; adversarial networks and variations 
    for unsupervised representation learning; generative modeling and other applications. Focus on applications in 
    computer vision, speech processing and research problems in communication theory."
  number: 10

- name: Natural Language Processing
  description: "This course focuses on computational applications involving the processing of written or spoken human 
    languages. Theoretical subtopics will likely include word statistics, formal and natural language grammars, computational 
    linguistics, hidden Markov models, and various machine learning methods. Applications covered will likely include 
    information retrieval, information extraction, text categorization, question answering, summarization, machine translation 
    and speech recognition."
  number: 11

- name: Software Engineering & Large System Design
  description: "This course teaches about the development stages of large, robust, expandable software systems developed 
    as part of a team. Topics include project management, capturing requirements, system design, UML, program design, 
    testing, delivery and maintenance. The class will develop a large project as a team using Java throughout the semester. 
    Tools, libraries and techniques necessary for the project will be covered in class, e.g., Eclipse, Javadoc, XML, SOAP, 
    servlets, threads and processes, Swing, JUnit, mySQL, JDBC, etc."
  number: 12

- name: Compilers
  description: "The theory, design and implementation of a practical compiler. Finite automata, LL and LR parsing, attribute 
    grammars, syntax-directed translation, symbol tables and scopes, type systems and representations, abstract syntax trees, 
    intermediate representation, basic blocks, data and control flow optimizations, assembly language generation including 
    registe and instruction selection. Students apply tools such as Flex and Bison to writing a functional compiler for a subset 
    of a real programming language such as C."
  number: 13


